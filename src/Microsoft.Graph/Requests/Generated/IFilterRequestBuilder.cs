// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface IFilterRequestBuilder.
    /// </summary>
    public partial interface IFilterRequestBuilder : IEntityRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new IFilterRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new IFilterRequest Request(IEnumerable<Option> options);
    
        /// <summary>
        /// Gets the request builder for FilterApply.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyRequestBuilder"/>.</returns>
        IFilterApplyRequestBuilder Apply(
            FilterCriteria criteria = null);

        /// <summary>
        /// Gets the request builder for FilterApplyBottomItemsFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyBottomItemsFilterRequestBuilder"/>.</returns>
        IFilterApplyBottomItemsFilterRequestBuilder ApplyBottomItemsFilter(
            Int32 count);

        /// <summary>
        /// Gets the request builder for FilterApplyBottomPercentFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyBottomPercentFilterRequestBuilder"/>.</returns>
        IFilterApplyBottomPercentFilterRequestBuilder ApplyBottomPercentFilter(
            Int32 percent);

        /// <summary>
        /// Gets the request builder for FilterApplyCellColorFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyCellColorFilterRequestBuilder"/>.</returns>
        IFilterApplyCellColorFilterRequestBuilder ApplyCellColorFilter(
            string color = null);

        /// <summary>
        /// Gets the request builder for FilterApplyCustomFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyCustomFilterRequestBuilder"/>.</returns>
        IFilterApplyCustomFilterRequestBuilder ApplyCustomFilter(
            string oper,
            string criteria1 = null,
            string criteria2 = null);

        /// <summary>
        /// Gets the request builder for FilterApplyDynamicFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyDynamicFilterRequestBuilder"/>.</returns>
        IFilterApplyDynamicFilterRequestBuilder ApplyDynamicFilter(
            string criteria);

        /// <summary>
        /// Gets the request builder for FilterApplyFontColorFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyFontColorFilterRequestBuilder"/>.</returns>
        IFilterApplyFontColorFilterRequestBuilder ApplyFontColorFilter(
            string color = null);

        /// <summary>
        /// Gets the request builder for FilterApplyIconFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyIconFilterRequestBuilder"/>.</returns>
        IFilterApplyIconFilterRequestBuilder ApplyIconFilter(
            Icon icon = null);

        /// <summary>
        /// Gets the request builder for FilterApplyTopItemsFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyTopItemsFilterRequestBuilder"/>.</returns>
        IFilterApplyTopItemsFilterRequestBuilder ApplyTopItemsFilter(
            Int32 count);

        /// <summary>
        /// Gets the request builder for FilterApplyTopPercentFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyTopPercentFilterRequestBuilder"/>.</returns>
        IFilterApplyTopPercentFilterRequestBuilder ApplyTopPercentFilter(
            Int32 percent);

        /// <summary>
        /// Gets the request builder for FilterApplyValuesFilter.
        /// </summary>
        /// <returns>The <see cref="IFilterApplyValuesFilterRequestBuilder"/>.</returns>
        IFilterApplyValuesFilterRequestBuilder ApplyValuesFilter(
            Newtonsoft.Json.Linq.JToken values = null);

        /// <summary>
        /// Gets the request builder for FilterClear.
        /// </summary>
        /// <returns>The <see cref="IFilterClearRequestBuilder"/>.</returns>
        IFilterClearRequestBuilder Clear();
    
    }
}
