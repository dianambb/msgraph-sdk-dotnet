// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Identity Risk Event.
    /// </summary>
    [DataContract]
    public partial class IdentityRiskEvent : Entity
    {
    
        /// <summary>
        /// Gets or sets user display name.
        /// </summary>
        [DataMember(Name = "userDisplayName", EmitDefaultValue = false, IsRequired = false)]
        public string UserDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets user principal name.
        /// </summary>
        [DataMember(Name = "userPrincipalName", EmitDefaultValue = false, IsRequired = false)]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets risk event date time.
        /// </summary>
        [DataMember(Name = "riskEventDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? RiskEventDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets risk event type.
        /// </summary>
        [DataMember(Name = "riskEventType", EmitDefaultValue = false, IsRequired = false)]
        public string RiskEventType { get; set; }
    
        /// <summary>
        /// Gets or sets risk level.
        /// </summary>
        [DataMember(Name = "riskLevel", EmitDefaultValue = false, IsRequired = false)]
        public RiskLevel? RiskLevel { get; set; }
    
        /// <summary>
        /// Gets or sets risk event status.
        /// </summary>
        [DataMember(Name = "riskEventStatus", EmitDefaultValue = false, IsRequired = false)]
        public RiskEventStatus? RiskEventStatus { get; set; }
    
        /// <summary>
        /// Gets or sets closed date time.
        /// </summary>
        [DataMember(Name = "closedDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? ClosedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets user id.
        /// </summary>
        [DataMember(Name = "userId", EmitDefaultValue = false, IsRequired = false)]
        public string UserId { get; set; }
    
        /// <summary>
        /// Gets or sets impacted user.
        /// </summary>
        [DataMember(Name = "impactedUser", EmitDefaultValue = false, IsRequired = false)]
        public User ImpactedUser { get; set; }
    
    }
}

