// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Task.
    /// </summary>
    [DataContract]
    public partial class Task : Entity
    {
    
        /// <summary>
        /// Gets or sets created by.
        /// </summary>
        [DataMember(Name = "createdBy", EmitDefaultValue = false, IsRequired = false)]
        public string CreatedBy { get; set; }
    
        /// <summary>
        /// Gets or sets assigned to.
        /// </summary>
        [DataMember(Name = "assignedTo", EmitDefaultValue = false, IsRequired = false)]
        public string AssignedTo { get; set; }
    
        /// <summary>
        /// Gets or sets plan id.
        /// </summary>
        [DataMember(Name = "planId", EmitDefaultValue = false, IsRequired = false)]
        public string PlanId { get; set; }
    
        /// <summary>
        /// Gets or sets bucket id.
        /// </summary>
        [DataMember(Name = "bucketId", EmitDefaultValue = false, IsRequired = false)]
        public string BucketId { get; set; }
    
        /// <summary>
        /// Gets or sets title.
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false, IsRequired = false)]
        public string Title { get; set; }
    
        /// <summary>
        /// Gets or sets order hint.
        /// </summary>
        [DataMember(Name = "orderHint", EmitDefaultValue = false, IsRequired = false)]
        public string OrderHint { get; set; }
    
        /// <summary>
        /// Gets or sets assignee priority.
        /// </summary>
        [DataMember(Name = "assigneePriority", EmitDefaultValue = false, IsRequired = false)]
        public string AssigneePriority { get; set; }
    
        /// <summary>
        /// Gets or sets percent complete.
        /// </summary>
        [DataMember(Name = "percentComplete", EmitDefaultValue = false, IsRequired = false)]
        public Int32? PercentComplete { get; set; }
    
        /// <summary>
        /// Gets or sets start date time.
        /// </summary>
        [DataMember(Name = "startDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets assigned date time.
        /// </summary>
        [DataMember(Name = "assignedDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? AssignedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// </summary>
        [DataMember(Name = "createdDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets assigned by.
        /// </summary>
        [DataMember(Name = "assignedBy", EmitDefaultValue = false, IsRequired = false)]
        public string AssignedBy { get; set; }
    
        /// <summary>
        /// Gets or sets due date time.
        /// </summary>
        [DataMember(Name = "dueDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? DueDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets has description.
        /// </summary>
        [DataMember(Name = "hasDescription", EmitDefaultValue = false, IsRequired = false)]
        public bool? HasDescription { get; set; }
    
        /// <summary>
        /// Gets or sets preview type.
        /// </summary>
        [DataMember(Name = "previewType", EmitDefaultValue = false, IsRequired = false)]
        public PreviewType? PreviewType { get; set; }
    
        /// <summary>
        /// Gets or sets completed date time.
        /// </summary>
        [DataMember(Name = "completedDateTime", EmitDefaultValue = false, IsRequired = false)]
        public DateTimeOffset? CompletedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets applied categories.
        /// </summary>
        [DataMember(Name = "appliedCategories", EmitDefaultValue = false, IsRequired = false)]
        public AppliedCategoriesCollection AppliedCategories { get; set; }
    
        /// <summary>
        /// Gets or sets conversation thread id.
        /// </summary>
        [DataMember(Name = "conversationThreadId", EmitDefaultValue = false, IsRequired = false)]
        public string ConversationThreadId { get; set; }
    
        /// <summary>
        /// Gets or sets details.
        /// </summary>
        [DataMember(Name = "details", EmitDefaultValue = false, IsRequired = false)]
        public TaskDetails Details { get; set; }
    
        /// <summary>
        /// Gets or sets assigned to task board format.
        /// </summary>
        [DataMember(Name = "assignedToTaskBoardFormat", EmitDefaultValue = false, IsRequired = false)]
        public TaskBoardTaskFormat AssignedToTaskBoardFormat { get; set; }
    
        /// <summary>
        /// Gets or sets progress task board format.
        /// </summary>
        [DataMember(Name = "progressTaskBoardFormat", EmitDefaultValue = false, IsRequired = false)]
        public TaskBoardTaskFormat ProgressTaskBoardFormat { get; set; }
    
        /// <summary>
        /// Gets or sets bucket task board format.
        /// </summary>
        [DataMember(Name = "bucketTaskBoardFormat", EmitDefaultValue = false, IsRequired = false)]
        public TaskBoardTaskFormat BucketTaskBoardFormat { get; set; }
    
    }
}

